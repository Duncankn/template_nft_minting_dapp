{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","components/navbar.js","components/main.js","components/card/card.js","components/myCollection.js","App2.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","symbol","totalSupply","maxSupply","cost","balanceOf","walletOfOwner","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataSuccess","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","connect","fetch","headers","Accept","abiResponse","json","abi","configResponse","CONFIG","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","NETWORK","ID","SmartContractObj","CONTRACT_ADDRESS","on","updateAccount","location","reload","NAME","Navbar","input","len","useDispatch","useSelector","useState","SCAN_LINK","SYMBOL","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","SET_CONFIG","getData","getConfig","config","useEffect","className","src","contract","onClick","length","substring","main","claimingNft","setClaimingNft","setFeedback","mintAmount","setMintAmount","e","preventDefault","newMintAmount","decrementMintAmount","incrementMintAmount","disabled","gasLimit","totalCostWei","String","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","claimNFTs","Card","props","imageUrl","id","alt","myCollection","collection","map","item","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.daeeed90.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  symbol: \"\",\n  totalSupply: 0,\n  maxSupply: 0,\n  cost: 0,\n  balanceOf: 0,\n  walletOfOwner: [],\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        symbol: action.payload.symbol,\n        totalSupply: action.payload.totalSupply,\n        maxSupply: action.payload.maxSupply,\n        cost: action.payload.cost,\n        balanceOf: action.payload.balanceOf,\n        walletOfOwner: action.payload.walletOfOwner,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = (payload) => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let symbol = await store\n        .getState()\n        .blockchain.smartContract.methods.symbol()\n        .call();\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      let maxSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.maxSupply()\n        .call();\n      let cost = await store\n        .getState()\n        .blockchain.smartContract.methods.cost()\n        .call();\n      let balanceOf = await store\n        .getState()\n        .blockchain.smartContract.methods.balanceOf(payload)\n        .call();\n      let walletOfOwner = await store\n        .getState()\n        .blockchain.smartContract.methods.walletOfOwner(payload)\n        .call();\n      dispatch(\n        fetchDataSuccess({\n          symbol,\n          totalSupply,\n          maxSupply,\n          cost,\n          balanceOf,\n          walletOfOwner\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"../redux/blockchain/blockchainActions\";\nimport { fetchData } from \"../redux/data/dataActions\";\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport default function Navbar() {\n\tconst dispatch = useDispatch();\n\tconst blockchain = useSelector((state) => state.blockchain);\n\tconst data = useSelector((state) => state.data);\n\tconst [CONFIG, SET_CONFIG] = useState({\n\t\tCONTRACT_ADDRESS: \"\",\n\t\tSCAN_LINK: \"\",\n\t\tNETWORK: {\n\t\t  NAME: \"\",\n\t\t  SYMBOL: \"\",\n\t\t  ID: 0,\n\t\t},\n\t\tNFT_NAME: \"\",\n\t\tSYMBOL: \"\",\n\t\tMAX_SUPPLY: 1,\n\t\tWEI_COST: 0,\n\t\tDISPLAY_COST: 0,\n\t\tGAS_LIMIT: 0,\n\t\tMARKETPLACE: \"\",\n\t\tMARKETPLACE_LINK: \"\",\n\t\tSHOW_BACKGROUND: false,\n\t});\n\n\tconst getData = () => {\n    \tif (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      \tdispatch(fetchData(blockchain.account));\n    \t}\n  \t};\n\n  \tconst getConfig = async () => {\n    \tconst configResponse = await fetch(\"/config/config.json\", {\n      \theaders: { \n        \t\"Content-Type\": \"application/json\",\n        \tAccept: \"application/json\",\n      \t\t},\n    \t});\n    \tconst config = await configResponse.json();\n    \tSET_CONFIG(config);\n  \t};\n\n\tuseEffect(() => {\n    \tgetConfig();\n  \t}, []);\n\n  \tuseEffect(() => {\n    \tgetData();\n  \t}, [blockchain.account]);\n\n\tfunction connectClick() {\n\t\tdispatch(connect());\n\t\tgetData();\n\t}\n\n\treturn (\n\t\t<nav>\n\t\t\t<img className=\"nav--logo\" src=\"/config/images/logo.png\" />\n\t\t\t{blockchain.account === null || blockchain.contract === null ? \n\t\t\t\t(<div>\n\t\t\t\t\t<button className=\"nav--button\" onClick={connectClick}>Connect</button>\n\t\t\t\t\t<p>Connect to the {CONFIG.NETWORK.NAME} network</p> \n\t\t\t\t</div>\n\t\t\t\t):\n\t\t\t\t(<div>\n\t\t\t\t\t<button className=\"nav--button\"> {truncate(blockchain.account, 7)} </button>\n\t\t\t\t\t<p className=\"hero--text\">{CONFIG.SYMBOL} : {data.balanceOf}</p>\n\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t</nav>\n\t)\n}","import React, {useEffect, useState, useRef} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport { connect } from \"../redux/blockchain/blockchainActions\";\nimport { fetchData } from \"../redux/data/dataActions\";\n\nexport default function main() {\n\tconst dispatch = useDispatch();\n\tconst blockchain = useSelector((state) => state.blockchain);\n\tconst data = useSelector((state) => state.data);\n    const [claimingNft, setClaimingNft] = useState(false);\n    const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n    const [mintAmount, setMintAmount] = useState(1);\n\tconst [CONFIG, SET_CONFIG] = useState({\n\t\tCONTRACT_ADDRESS: \"\",\n\t\tSCAN_LINK: \"\",\n\t\tNETWORK: {\n\t\t  NAME: \"\",\n\t\t  SYMBOL: \"\",\n\t\t  ID: 0,\n\t\t},\n\t\tNFT_NAME: \"\",\n\t\tSYMBOL: \"\",\n\t\tMAX_SUPPLY: 1,\n\t\tWEI_COST: 0,\n\t\tDISPLAY_COST: 0,\n\t\tGAS_LIMIT: 0,\n\t\tMARKETPLACE: \"\",\n\t\tMARKETPLACE_LINK: \"\",\n\t\tSHOW_BACKGROUND: false,\n\t});\n\n    const claimNFTs = () => {\n        let cost = CONFIG.WEI_COST;\n        let gasLimit = CONFIG.GAS_LIMIT;\n        let totalCostWei = String(cost * mintAmount);\n        let totalGasLimit = String(gasLimit * mintAmount);\n        console.log(\"Cost: \", totalCostWei);\n        console.log(\"Gas limit: \", totalGasLimit);\n        setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n        setClaimingNft(true);\n        blockchain.smartContract.methods\n          .mint(mintAmount)\n          .send({\n            gasLimit: String(totalGasLimit),\n            to: CONFIG.CONTRACT_ADDRESS,\n            from: blockchain.account,\n            value: totalCostWei,\n          })\n          .once(\"error\", (err) => {\n            console.log(err);\n            setFeedback(\"Sorry, something went wrong please try again later.\");\n            setClaimingNft(false);\n          })\n          .then((receipt) => {\n            console.log(receipt);\n            setFeedback(\n              `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n            );\n            setClaimingNft(false);\n            dispatch(fetchData(blockchain.account));\n          });\n    };\n    \n    const decrementMintAmount = () => {\n        let newMintAmount = mintAmount - 1;\n        if (newMintAmount < 1) {\n            newMintAmount = 1;\n        }\n        setMintAmount(newMintAmount);\n    };\n\n    const incrementMintAmount = () => {\n        let newMintAmount = mintAmount + 1;\n        if (newMintAmount > 10) {\n            newMintAmount = 10;\n        }\n        setMintAmount(newMintAmount);\n    };\n\n\tconst getData = () => {\n    \tif (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      \tdispatch(fetchData(blockchain.account));\n    \t}\n  \t};\n\n  \tconst getConfig = async () => {\n    \tconst configResponse = await fetch(\"/config/config.json\", {\n      \theaders: { \n        \t\"Content-Type\": \"application/json\",\n        \tAccept: \"application/json\",\n      \t\t},\n    \t});\n    \tconst config = await configResponse.json();\n    \tSET_CONFIG(config);\n  \t};\n\n\tuseEffect(() => {\n    \tgetConfig();\n  \t}, []);\n\n  \tuseEffect(() => {\n    \tgetData();\n  \t}, [blockchain.account]);\n\n\tfunction connectClick() {\n\t\tdispatch(connect());\n\t\tgetData();\n\t}\n\n\treturn (\n\t\t<div className=\"main-content\">\n            <div className=\"hero\">\n                <p className=\"hero--text\">\n                    It a template NFT minting DAPP.\n                    Please connect the wallet to Harmony Testnet.\n                    Try to mint some NFTs.\n                </p>\n                <p className=\"hero--text\">\n                    Contract Address: {CONFIG.CONTRACT_ADDRESS}\n                </p>\n            </div>\n            <div className=\"mint--container\">\n                <h1 className=\"minted-amount\">\n                    {data.totalSupply} / {data.maxSupply}\n                </h1>\n                <h2>\n                    1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\n                    {CONFIG.NETWORK.SYMBOL}.\n                </h2>\n                <div className=\"quantity--container\">\n                    <button className=\"round-button\" \n                            onClick={(e) => {\n                                e.preventDefault();\n                                decrementMintAmount();\n                                }\n                    }>\n                        -\n                    </button>\n                    <h3>\n                        {mintAmount}\n                    </h3>\n                    <button className=\"round-button\" \n                            onClick={(e) => {\n                                e.preventDefault();\n                                incrementMintAmount();\n                                }\n                    }>\n                        +\n                    </button>\n                </div>\n                <button \n                    className=\"nav--button\"\n                    disabled={claimingNft ? 1 : 0} \n                    onClick={(e) => {\n                        e.preventDefault();\n                        claimNFTs();\n                        getData();\n                    }}>\n                        Mint\n                </button>\n            </div>\n        </div>\n\t)\n}","import React from \"react\";\nimport \"./card.css\";\n\nexport default function Card(props) {\n  const basePicUrl =\n    \"https://dweb.link/ipfs/QmTB3d5hkv3gEa7K9BvDpvgYfwGXu7PfcLuhCVgXtbMwAP/\";\n  const projectName = \"The Art\";\n\n  const imageUrl = basePicUrl + props.id + \".png\";\n  return (\n    <div className=\"card__box\">\n      <img className=\"card__image\" src={imageUrl} alt=\"example\" />\n      <h2 className=\"card__name\">\n        {projectName} # {props.id}\n      </h2>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Card from \"./card/card\";\n\nconst myCollection = () => {\n    const dispatch = useDispatch();\n    const data = useSelector((state) => state.data);\n\n    const collection = data.walletOfOwner;\n\n    return (\n        <div>\n            <h1 className=\"myCollection--title\">My Collection</h1>\n            <div className=\"myCollection\">\n                {collection.map((item) => {\n                    return (\n                    <>\n                        <Card id={item} />\n                    </>\n                    );\n                })}\n            </div>\n        </div>\n    );\n}\n\nexport default myCollection","import React from \"react\";\nimport Navbar from \"./components/navbar\"\nimport Main from \"./components/main\"\nimport MyCollection from \"./components/myCollection\";\n\nfunction App() {\n    return (\n    <div className=\"screen--container\">\n      <Navbar />\n      <Main />\n      <MyCollection />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App2\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/style.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}